http 포로토콜(protocall) + security => https

세션의 단점을 커버함.
세션리스커넥션==JWT


system.out이 부족하고 불편한 점이 많아서 대신 사용하는 것은 loging
loging을 해주는 특별한 tool => logger
그중에 가장 유명한 로거는 하단에 있는 것
import org.slf4j.Logger;

record 형은 기록은 하되 수정이 불가능함.



pom.xl에서 dependency
	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>3.1.5</version>
		</dependency>
를 추가하고 터미널을 다시 실행시키면 아래와 같은 코드가 터미널에 보여짐.
Using generated security password: 9a5b5e30-157c-460b-ad29-10296af054c5

defualt 값은 릴로드를 할 때마다 세션은 매번 새로 생성됨.

postman에서 get 상태로
http://localhost:8080/auto => Successfully Access
http://localhost:8080/todos => [{"username":"in28minutes","description":"Learn AWS"},{"username":"in28minutes","description":"Get AWS Certified"}]

그대로 브라우저에서 주소창에 입력을 하면 로그인을 하라고 나옴.
그대로 todos를 입력하거나 auth를 입력하면 Please sign in 이라면서 username과 password를 입력하는 창이 나옴.
그곳에 username 은 user 이고 password는 터미널 다시 실행시키고 나온 security password와 같음.
 입력을 하고 Sign in 을 하고 나면 todos와 auto는 전에 postman에서 봤던 것과 같은 텍스트가 출력됨.

다시 eclips의 propertieds에 가서 

spring.security.user.name=user
spring.security.user.password=1234
을 입력하면
기존에 있던 초기 비밀번호가 1234로 변경됨.

초기비밀번호를 변경하고나면 postman에서는 더 이상 정보가 나오지 않음.
(401error 발생)

postman에서 보고 싶으면 Auth 창에서 type을 Basic Auth로 변경하면 username과 password를 입력하는 창이 나옴. 입력하면 그대로 문구가 출력됨.


CSRF(Cross Site Request Forgery) : 사이트간 요청 위조

401 에러 : 인증실패

로그인할 때는 기본적으로 CSRF 토큰이 같이 실림(개발자도구->Elements-> input~~hidden~~ value:y66GmeGm5GFYnwTEu83sw5MBxyXoEQ5ZZhBzjBdEdolmLylI8s21rtmehQB1pzP92uDYpaEx6kTdKGx0BykX6iZ9QOoCGE9)

postman에서 headers에 key 값에 X-CSRF-TOKEN
value 값에 y66GmeGm5GFYnwTEu83sw5MBxyXoEQ5ZZhBzjBdEdolmLylI8s21rtmehQB1pzP92uDYpaEx6kTdKGx0BykX6iZ9QOoCGE9 를 입력

이것은 작동이 안됨(401 Unauthorized)

포스트맨에 GET url: http://localhost:8080/csrf-token를 입력하면


{
    "parameterName": "_csrf",
    "token": "JqhViLylsmHMNyb1GlRcAXHQF0ALaxCtLKGn-g_B80DOt8hxR85hu97BhVnhA0SWfHloOUbjOng6XSWAGpaXyzmgyyL-1voV",
    "headerName": "X-CSRF-TOKEN"
}
 이 나오면 여기서 token을 복사해서 headers에  key값은 그대로, value값에 JqhViLylsmHMNyb1GlRcAXHQF0ALaxCtLKGn-g_B80DOt8hxR85hu97BhVnhA0SWfHloOUbjOng6XSWAGpaXyzmgyyL-1voV
입력을 하고
http://localhost:8080/users/tom/todos
에 
{"username" : "tom",
"description" : "study spring"
} 으로 변경 하고 post send를 하면 200OK가 뜬다